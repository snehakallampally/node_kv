// import express from "express";
// import Employee from "./src/entity/employee.entity";
// import dataSource from "./src/db/data-source.db";

// const employeeRouter = express.Router();

// let count = 0;
// const employees: Employee[] = [
//   {
//     id: 1,
//     email: "employee1@gmail.com",
//     name: "Employee1",
//     created_at: new Date(),
//     updated_at: new Date(),
//     deleted_at: new Date(),
//   },
//   {
//     id: 2,
//     email: "employee2@gmail.com",
//     name: "Employee2",
//     created_at: new Date(),
//     updated_at: new Date(),
//     deleted_at: new Date(),
//   },
// ];

// employeeRouter.get("/", async (req, res) => {
//   const employeeRepository = dataSource.getRepository(Employee);
//   const employee = await employeeRepository.find();
//   res.status(200).send(employee);
// });

// employeeRouter.get("/:employeeId", async (req, res) => {
//   const employeeRepository = dataSource.getRepository(Employee);
//   const index = req.params.employeeId;
//   const savedEmployee = await employeeRepository.findOneBy({
//     id: Number(index),
//   });
//   res.status(200).send(savedEmployee);
// });

// employeeRouter.post("/", async (req, res) => {
//   // console.log(req.body);
//   const employeeRepository = dataSource.getRepository(Employee);
//   const newEmployee = new Employee();
//   newEmployee.email = req.body.email;
//   newEmployee.name = req.body.name;
//   const savedEmployee = await employeeRepository.save(newEmployee); //these repo methods are all async functions
//   res.status(200).send(savedEmployee);
// });

// employeeRouter.put("/:id", async (req, res) => {
//   const employeeRepository = dataSource.getRepository(Employee);
//   const employee = await employeeRepository.findOneBy({ id: Number(req.params.id) });
//   employee.email = req.body.email;
//   employee.name = req.body.name;
//   const updatedEmployee = await employeeRepository.save(employee);
//   res.status(200).send(updatedEmployee);
// });

// employeeRouter.delete("/:id", async (req, res) => {
//   const employeeRepository = dataSource.getRepository(Employee);
//   const result = await employeeRepository.softDelete(Number(req.params.id))
//   res.status(200).send(result);
// });

// export default employeeRouter;
